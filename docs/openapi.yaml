openapi: 3.0.0
info:
  title: Tractive API
  version: 1.0.0
  description: API documentation for Tractive backend

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            type: string
        activeRole:
          type: string
        isVerified:
          type: boolean
    Product:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        quantity:
          type: number
    Farmer:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
    Order:
      type: object
      properties:
        buyer:
          type: string
        products:
          type: array
          items:
            type: object
        totalAmount:
          type: number
        status:
          type: string
        transportStatus:
          type: string
        transporter:
          type: string
    Transaction:
      type: object
      properties:
        order:
          type: string
        buyer:
          type: string
        amount:
          type: number
        status:
          type: string

security:
  - bearerAuth: []

paths:
  /api/auth/register:
    post:
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered
  /api/auth/login:
    post:
      summary: Login and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token
  /api/auth/verify-code:
    post:
      summary: Verify email with code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                code:
                  type: string
      responses:
        '200':
          description: Email verified
  /api/products:
    get:
      summary: List products
      responses:
        '200':
          description: List of products
    post:
      summary: Create product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
  /api/products/{id}:
    get:
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
    patch:
      summary: Update product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
  /api/farmers:
    get:
      summary: List farmers created by you
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of farmers
    post:
      summary: Create farmer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farmer'
      responses:
        '201':
          description: Farmer created
  /api/farmers/{id}:
    get:
      summary: Get farmer by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Farmer details
    patch:
      summary: Update farmer
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farmer'
      responses:
        '200':
          description: Farmer updated
  /api/orders:
    get:
      summary: List your orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
    post:
      summary: Create order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created
  /api/orders/{id}:
    get:
      summary: Get order by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
    patch:
      summary: Update order status/transport
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated
  /api/transactions:
    get:
      summary: List your transactions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of transactions
    post:
      summary: Create transaction for paid order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created
  /api/transactions/{id}:
    get:
      summary: Get transaction by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction details
    patch:
      summary: Approve transaction (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved]
      responses:
        '200':
          description: Transaction approved
